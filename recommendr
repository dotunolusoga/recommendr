#!/usr/bin/env ruby

require "highline/import"

Dir["./app/**/*.rb"].each { |f| require f }
Dir["./lib/*.rb"].each { |f| require f }

menu_prompt = <<EOS
1. Add a recommendation
2. Edit a recommendation
3. Delete a recommendation
4. List all recommendations
5. Exit
EOS

def print_error_message
  puts "[Help] Run as: ./recommendr manage"
end

if ARGV.empty?
  recommendation_controller = RecommendationsController.new
  user_input = ask('Can we make a recommendation for you today?(y/n)')
  if user_input.downcase == 'y'
    user_response = ask("How are you feeling today?(happy/so so/sad)\n")
    if user_response.downcase == "sad"
      puts "\nTHESE BOOKS SHOULD HELP YOU FEEL BETTER!\n\n"
      say("\n#{recommendation_controller.sad_result}\n\n")
    elsif user_response.downcase == "happy"
      puts "\nTHESE BOOKS SHOULD KNOCK YOU DOWN TO SIZE!\n\n"
      say("\n#{recommendation_controller.happy_result}\n\n")
    else
      puts "\nREAD A BOOK ANYWAY\n\n"
      say("\n#{recommendation_controller.neutral_result}\n\n")
    end
  else
    say('Really dude? You\'re actually not going to read a book? I\'m so done with you')
  end
elsif ARGV.size == 1 and ARGV[0] == 'manage'
  loop do
    choose do |menu|
      menu.prompt = ""

      recommendation_controller = RecommendationsController.new

      menu.choice('Add a recommendation') {
        recommendation_controller.add_prompt
      }
      menu.choice('Edit a recommendation') do
        say ("Which recommendation fails to meet your exacting standards 'Oh Great & Powerful One'?\n")
        exit
      end
      menu.choice('Delete a recommendation') {
        recommendation_controller.delete
        say("Recommendation has been deleted\n")
      }
      menu.choice('List all recommendations') {
        recommendation_controller.index
      }
      menu.choice('Exit') do
        say ("You have successfully exited the management menu.")
        exit
      end
    end
  end
else
  print_error_message
end
